//@ts-check
///<reference path="DevKit.d.ts" />
declare namespace LuckyMokey {
	namespace Formmsdyn_agreement_Agreement {
		interface Header {
			msdyn_name: DevKit.Form.Controls.ControlString;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Form.Controls.ControlLookup;
			/** Owner Id */
			OwnerId: DevKit.Form.Controls.ControlLookup;
		}
		interface tab__4C8BEF3B_E06C_4411_B312_59F180556E4D_Sections {
			_3568BE1D_2A14_40A9_B8CD_B04E3806E3E2: DevKit.Form.Controls.ControlSection;
			tab_1_section_2: DevKit.Form.Controls.ControlSection;
			tab_4_section_1: DevKit.Form.Controls.ControlSection;
			_4C8BEF3B_E06C_4411_B312_59F180556E4D_SECTION_2: DevKit.Form.Controls.ControlSection;
			_4C8BEF3B_E06C_4411_B312_59F180556E4D_SECTION_3: DevKit.Form.Controls.ControlSection;
		}
		interface tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_Sections {
			_BC490053_F7D4_44E2_BFB7_1CA938F59E1B: DevKit.Form.Controls.ControlSection;
			_2BCF1BE9_1CEB_434D_9866_6486738F2ACC: DevKit.Form.Controls.ControlSection;
			_7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_SECTION_3: DevKit.Form.Controls.ControlSection;
		}
		interface tab_tab_3_Sections {
			tab_3_section_3: DevKit.Form.Controls.ControlSection;
			tab_3_section_4: DevKit.Form.Controls.ControlSection;
		}
		interface tab_tab_4_Sections {
			tab_3_section_1: DevKit.Form.Controls.ControlSection;
		}
		interface tab__4C8BEF3B_E06C_4411_B312_59F180556E4D extends DevKit.Form.Controls.IControlTab {
			Section: tab__4C8BEF3B_E06C_4411_B312_59F180556E4D_Sections;
		}
		interface tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D extends DevKit.Form.Controls.IControlTab {
			Section: tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_Sections;
		}
		interface tab_tab_3 extends DevKit.Form.Controls.IControlTab {
			Section: tab_tab_3_Sections;
		}
		interface tab_tab_4 extends DevKit.Form.Controls.IControlTab {
			Section: tab_tab_4_Sections;
		}
		interface Tabs {
			_4C8BEF3B_E06C_4411_B312_59F180556E4D: tab__4C8BEF3B_E06C_4411_B312_59F180556E4D;
			_7A6686D3_72AD_4724_9C46_5BA3C5FAE32D: tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D;
			tab_3: tab_tab_3;
			tab_4: tab_tab_4;
		}
		interface Body {
			Tab: Tabs;
			notescontrol: DevKit.Form.Controls.ControlNote;
			bookingsgrid: DevKit.Form.Controls.ControlGrid;
			invoicegrid: DevKit.Form.Controls.ControlGrid;
			WebResource_AgreementRecordGeneration_TimeField: DevKit.Form.Controls.ControlWebResource;
			ContractLines: DevKit.Form.Controls.ControlGrid;
			QuotesLinesGrid: DevKit.Form.Controls.ControlGrid;
			/** Shows the details of this agreement, as presented to the customer */
			msdyn_AgreementDetails: DevKit.Form.Controls.ControlString;
			/** This field defines the time of day when Work Orders and Invoices are generated by the Agreement Booking Setups and Agreement Invoice Setups defined on this Agreement. If this field is blank, the logic will look to the overall setting on the Field Service Settings record. */
			msdyn_AgreementRecordGeneration: DevKit.Form.Controls.ControlDateTime;
			/** This field defines the time of day when Work Orders and Invoices are generated by the Agreement Booking Setups and Agreement Invoice Setups defined on this Agreement. If this field is blank, the logic will look to the overall setting on the Field Service Settings record. */
			msdyn_AgreementRecordGeneration_1: DevKit.Form.Controls.ControlDateTime;
			/** Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account. */
			msdyn_BillingAccount: DevKit.Form.Controls.ControlLookup;
			/** Enter the date this agreement was canceled. */
			msdyn_DateCanceled: DevKit.Form.Controls.ControlDate;
			/** Type a description of the agreement. */
			msdyn_Description: DevKit.Form.Controls.ControlString;
			/** Shows the duration how long this agreement is active. */
			msdyn_Duration: DevKit.Form.Controls.ControlInteger;
			/** Enter the date when this agreement is no longer active. */
			msdyn_EndDate: DevKit.Form.Controls.ControlDate;
			msdyn_name: DevKit.Form.Controls.ControlString;
			/** If this agreement originates from another agreement, you should specify the originating agreement here */
			msdyn_OriginatingAgreement: DevKit.Form.Controls.ControlLookup;
			/** Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account */
			msdyn_PriceList: DevKit.Form.Controls.ControlLookup;
			/** Tax Code to be used to calculate tax when Agreement is taxable. By default the system will use the tax code specified on the service account */
			msdyn_SalesTaxCode: DevKit.Form.Controls.ControlLookup;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Form.Controls.ControlLookup;
			/** The service territory this Agreement relates to. By default this will be set to the Service Territory defined on the service account */
			msdyn_ServiceTerritory: DevKit.Form.Controls.ControlLookup;
			/** Enter the date from when this agreement is active. */
			msdyn_StartDate: DevKit.Form.Controls.ControlDate;
			/** Agreement Substatus */
			msdyn_SubStatus: DevKit.Form.Controls.ControlLookup;
			/** Tracks the current system status. */
			msdyn_SystemStatus: DevKit.Form.Controls.ControlOptionSet;
			/** Specify if Agreement is taxable. By default an Agreement is taxable if billing account is not tax exempt, and Agreement type is taxable. If any of the above is false it will be set to non-taxable. */
			msdyn_Taxable: DevKit.Form.Controls.ControlBoolean;
			/** Owner Id */
			OwnerId: DevKit.Form.Controls.ControlLookup;
		}
		interface Navigation {
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingsetup_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementinvoicesetup_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_invoicedetail_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement: DevKit.Form.Controls.ControlNavigationItem,
			navProcessSessions: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementinvoicedate_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_workorder_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingdate_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingincident_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingservicetask_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement: DevKit.Form.Controls.ControlNavigationItem
		}
		interface ProcessAgreement_Business_Process {
			/** Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account. */
			msdyn_BillingAccount: DevKit.Form.Controls.ControlLookup;
			/** Type a description of the agreement. */
			msdyn_Description: DevKit.Form.Controls.ControlString;
			/** Type a description of the agreement. */
			msdyn_Description_1: DevKit.Form.Controls.ControlString;
			/** Shows the duration how long this agreement is active. */
			msdyn_Duration: DevKit.Form.Controls.ControlInteger;
			/** Enter the date when this agreement is no longer active. */
			msdyn_EndDate: DevKit.Form.Controls.ControlDate;
			msdyn_name: DevKit.Form.Controls.ControlString;
			/** Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account */
			msdyn_PriceList: DevKit.Form.Controls.ControlLookup;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Form.Controls.ControlLookup;
			/** Enter the date from when this agreement is active. */
			msdyn_StartDate: DevKit.Form.Controls.ControlDate;
			/** Agreement Substatus */
			msdyn_SubStatus: DevKit.Form.Controls.ControlLookup;
			/** Agreement Substatus */
			msdyn_SubStatus_1: DevKit.Form.Controls.ControlLookup;
			/** Tracks the current system status. */
			msdyn_SystemStatus: DevKit.Form.Controls.ControlOptionSet;
			/** Tracks the current system status. */
			msdyn_SystemStatus_1: DevKit.Form.Controls.ControlOptionSet;
			/** Tracks the current system status. */
			msdyn_SystemStatus_2: DevKit.Form.Controls.ControlOptionSet;
		}
		interface Process extends DevKit.Form.Controls.IControlProcess {
			Agreement_Business_Process: ProcessAgreement_Business_Process;
		}
	}
	class Formmsdyn_agreement_Agreement extends DevKit.Form.IForm {
		/**
		* DynamicsCrm.DevKit form msdyn_agreement_Agreement
		* @param executionContext the execution context
		* @param defaultWebResourceName default resource name. E.g.: "devkit_/resources/Resource"
		*/
		constructor(executionContext: any, defaultWebResourceName?: string);
		/** Utility functions/methods/objects for Dynamics 365 form */
		Utility: DevKit.Form.Utility;
		/** Provides properties and methods to use Web API to create and manage records and execute Web API actions and functions in Customer Engagement */
		WebApi: DevKit.Form.WebApi;
		/** The Body section of form msdyn_agreement_Agreement */
		Body: LuckyMokey.Formmsdyn_agreement_Agreement.Body;
		/** The Header section of form msdyn_agreement_Agreement */
		Header: LuckyMokey.Formmsdyn_agreement_Agreement.Header;
		/** The Navigation of form msdyn_agreement_Agreement */
		Navigation: LuckyMokey.Formmsdyn_agreement_Agreement.Navigation;
		/** The Process of form msdyn_agreement_Agreement */
		Process: LuckyMokey.Formmsdyn_agreement_Agreement.Process;
	}
	namespace FormAgreement_Mobile {
		interface tab_fstab_general_Sections {
			fstab_general_section_summary: DevKit.Form.Controls.ControlSection;
			tab_3_section_2: DevKit.Form.Controls.ControlSection;
			fstab_general_section_details: DevKit.Form.Controls.ControlSection;
			fstab_general_column_2_section_1: DevKit.Form.Controls.ControlSection;
			_4C8BEF3B_E06C_4411_B312_59F180556E4D_SECTION_3: DevKit.Form.Controls.ControlSection;
		}
		interface tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_Sections {
			_BC490053_F7D4_44E2_BFB7_1CA938F59E1B: DevKit.Form.Controls.ControlSection;
			_2BCF1BE9_1CEB_434D_9866_6486738F2ACC: DevKit.Form.Controls.ControlSection;
			_7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_SECTION_3: DevKit.Form.Controls.ControlSection;
		}
		interface tab_fstab_general extends DevKit.Form.Controls.IControlTab {
			Section: tab_fstab_general_Sections;
		}
		interface tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D extends DevKit.Form.Controls.IControlTab {
			Section: tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_Sections;
		}
		interface Tabs {
			fstab_general: tab_fstab_general;
			_7A6686D3_72AD_4724_9C46_5BA3C5FAE32D: tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D;
		}
		interface Body {
			Tab: Tabs;
			bookingsgrid: DevKit.Form.Controls.ControlGrid;
			invoicegrid: DevKit.Form.Controls.ControlGrid;
			notescontrol: DevKit.Form.Controls.ControlNote;
			WebResource_AgreementRecordGeneration_TimeField: DevKit.Form.Controls.ControlWebResource;
			/** Shows the details of this agreement, as presented to the customer */
			msdyn_AgreementDetails: DevKit.Form.Controls.ControlString;
			/** This field defines the time of day when Work Orders and Invoices are generated by the Agreement Booking Setups and Agreement Invoice Setups defined on this Agreement. If this field is blank, the logic will look to the overall setting on the Field Service Settings record. */
			msdyn_AgreementRecordGeneration: DevKit.Form.Controls.ControlDateTime;
			/** Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account. */
			msdyn_BillingAccount: DevKit.Form.Controls.ControlLookup;
			/** Enter the date this agreement was canceled. */
			msdyn_DateCanceled: DevKit.Form.Controls.ControlDate;
			/** Type a description of the agreement. */
			msdyn_Description: DevKit.Form.Controls.ControlString;
			/** Shows the duration how long this agreement is active. */
			msdyn_Duration: DevKit.Form.Controls.ControlInteger;
			/** Enter the date when this agreement is no longer active. */
			msdyn_EndDate: DevKit.Form.Controls.ControlDate;
			msdyn_name: DevKit.Form.Controls.ControlString;
			/** If this agreement originates from another agreement, you should specify the originating agreement here */
			msdyn_OriginatingAgreement: DevKit.Form.Controls.ControlLookup;
			/** Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account */
			msdyn_PriceList: DevKit.Form.Controls.ControlLookup;
			/** Tax Code to be used to calculate tax when Agreement is taxable. By default the system will use the tax code specified on the service account */
			msdyn_SalesTaxCode: DevKit.Form.Controls.ControlLookup;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Form.Controls.ControlLookup;
			/** The service territory this Agreement relates to. By default this will be set to the Service Territory defined on the service account */
			msdyn_ServiceTerritory: DevKit.Form.Controls.ControlLookup;
			/** Enter the date from when this agreement is active. */
			msdyn_StartDate: DevKit.Form.Controls.ControlDate;
			/** Agreement Substatus */
			msdyn_SubStatus: DevKit.Form.Controls.ControlLookup;
			/** Tracks the current system status. */
			msdyn_SystemStatus: DevKit.Form.Controls.ControlOptionSet;
			/** Specify if Agreement is taxable. By default an Agreement is taxable if billing account is not tax exempt, and Agreement type is taxable. If any of the above is false it will be set to non-taxable. */
			msdyn_Taxable: DevKit.Form.Controls.ControlBoolean;
			/** Owner Id */
			OwnerId: DevKit.Form.Controls.ControlLookup;
		}
		interface Navigation {
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingsetup_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementinvoicesetup_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_invoicedetail_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement: DevKit.Form.Controls.ControlNavigationItem,
			navAsyncOperations: DevKit.Form.Controls.ControlNavigationItem,
			navProcessSessions: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementinvoicedate_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_workorder_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_quotedetail_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_salesorderdetail_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingdate_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingincident_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingservicetask_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement: DevKit.Form.Controls.ControlNavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement: DevKit.Form.Controls.ControlNavigationItem
		}
		interface ProcessAgreement_Business_Process {
			/** Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account. */
			msdyn_BillingAccount: DevKit.Form.Controls.ControlLookup;
			/** Type a description of the agreement. */
			msdyn_Description: DevKit.Form.Controls.ControlString;
			/** Type a description of the agreement. */
			msdyn_Description_1: DevKit.Form.Controls.ControlString;
			/** Shows the duration how long this agreement is active. */
			msdyn_Duration: DevKit.Form.Controls.ControlInteger;
			/** Enter the date when this agreement is no longer active. */
			msdyn_EndDate: DevKit.Form.Controls.ControlDate;
			msdyn_name: DevKit.Form.Controls.ControlString;
			/** Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account */
			msdyn_PriceList: DevKit.Form.Controls.ControlLookup;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Form.Controls.ControlLookup;
			/** Enter the date from when this agreement is active. */
			msdyn_StartDate: DevKit.Form.Controls.ControlDate;
			/** Agreement Substatus */
			msdyn_SubStatus: DevKit.Form.Controls.ControlLookup;
			/** Agreement Substatus */
			msdyn_SubStatus_1: DevKit.Form.Controls.ControlLookup;
			/** Tracks the current system status. */
			msdyn_SystemStatus: DevKit.Form.Controls.ControlOptionSet;
			/** Tracks the current system status. */
			msdyn_SystemStatus_1: DevKit.Form.Controls.ControlOptionSet;
			/** Tracks the current system status. */
			msdyn_SystemStatus_2: DevKit.Form.Controls.ControlOptionSet;
		}
		interface Process extends DevKit.Form.Controls.IControlProcess {
			Agreement_Business_Process: ProcessAgreement_Business_Process;
		}
	}
	class FormAgreement_Mobile extends DevKit.Form.IForm {
		/**
		* DynamicsCrm.DevKit form Agreement_Mobile
		* @param executionContext the execution context
		* @param defaultWebResourceName default resource name. E.g.: "devkit_/resources/Resource"
		*/
		constructor(executionContext: any, defaultWebResourceName?: string);
		/** Utility functions/methods/objects for Dynamics 365 form */
		Utility: DevKit.Form.Utility;
		/** Provides properties and methods to use Web API to create and manage records and execute Web API actions and functions in Customer Engagement */
		WebApi: DevKit.Form.WebApi;
		/** The Body section of form Agreement_Mobile */
		Body: LuckyMokey.FormAgreement_Mobile.Body;
		/** The Navigation of form Agreement_Mobile */
		Navigation: LuckyMokey.FormAgreement_Mobile.Navigation;
		/** The Process of form Agreement_Mobile */
		Process: LuckyMokey.FormAgreement_Mobile.Process;
	}
}
declare namespace OptionSet {
	namespace msdyn_agreement {
		enum msdyn_SystemStatus {
			/** 690970000 */
			Estimate,
			/** 690970001 */
			Active,
			/** 690970002 */
			Expired,
			/** 690970003 */
			Canceled
		}
		enum statecode {
			/** 0 */
			Active,
			/** 1 */
			Inactive
		}
		enum statuscode {
			/** 1 */
			Active,
			/** 2 */
			Inactive
		}
        enum RollupState {
            /** 0 - Attribute value is yet to be calculated */
            NotCalculated,
            /** 1 - Attribute value has been calculated per the last update time in <AttributeSchemaName>_Date attribute */
            Calculated,
            /** 2 - Attribute value calculation lead to overflow error */
            OverflowError,
            /** 3 - Attribute value calculation failed due to an internal error, next run of calculation job will likely fix it */
            OtherError,
            /** 4 - Attribute value calculation failed because the maximum number of retry attempts to calculate the value were exceeded likely due to high number of concurrency and locking conflicts */
            RetryLimitExceeded,
            /** 5 - Attribute value calculation failed because maximum hierarchy depth limit for calculation was reached */
            HierarchicalRecursionLimitReached,
            /** 6 - Attribute value calculation failed because a recursive loop was detected in the hierarchy of the record */
            LoopDetected
        }
	}
}
//{'JsForm':['Agreement','Agreement - Mobile'],'JsWebApi':false,'IsDebugForm':true,'IsDebugWebApi':false}
//@ts-check
///<reference path="devkit.d.ts" />
declare namespace MyDog {
	namespace Formmsdyn_agreement_Agreement {
		interface Header extends DevKit.Controls.IHeader {
			msdyn_name: DevKit.Controls.String;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Controls.Lookup;
			/** Owner Id */
			OwnerId: DevKit.Controls.Lookup;
		}
		interface tab__4C8BEF3B_E06C_4411_B312_59F180556E4D_Sections {
			_3568BE1D_2A14_40A9_B8CD_B04E3806E3E2: DevKit.Controls.Section;
			tab_1_section_2: DevKit.Controls.Section;
			tab_4_section_1: DevKit.Controls.Section;
			_4C8BEF3B_E06C_4411_B312_59F180556E4D_SECTION_2: DevKit.Controls.Section;
			_4C8BEF3B_E06C_4411_B312_59F180556E4D_SECTION_3: DevKit.Controls.Section;
		}
		interface tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_Sections {
			_BC490053_F7D4_44E2_BFB7_1CA938F59E1B: DevKit.Controls.Section;
			_2BCF1BE9_1CEB_434D_9866_6486738F2ACC: DevKit.Controls.Section;
			_7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_SECTION_3: DevKit.Controls.Section;
		}
		interface tab_tab_3_Sections {
			tab_3_section_3: DevKit.Controls.Section;
			tab_3_section_4: DevKit.Controls.Section;
		}
		interface tab_tab_4_Sections {
			tab_3_section_1: DevKit.Controls.Section;
		}
		interface tab__4C8BEF3B_E06C_4411_B312_59F180556E4D extends DevKit.Controls.ITab {
			Section: tab__4C8BEF3B_E06C_4411_B312_59F180556E4D_Sections;
		}
		interface tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D extends DevKit.Controls.ITab {
			Section: tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_Sections;
		}
		interface tab_tab_3 extends DevKit.Controls.ITab {
			Section: tab_tab_3_Sections;
		}
		interface tab_tab_4 extends DevKit.Controls.ITab {
			Section: tab_tab_4_Sections;
		}
		interface Tabs {
			_4C8BEF3B_E06C_4411_B312_59F180556E4D: tab__4C8BEF3B_E06C_4411_B312_59F180556E4D;
			_7A6686D3_72AD_4724_9C46_5BA3C5FAE32D: tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D;
			tab_3: tab_tab_3;
			tab_4: tab_tab_4;
		}
		interface Body {
			Tab: Tabs;
			notescontrol: DevKit.Controls.Note;
			WebResource_AgreementRecordGeneration_TimeField: DevKit.Controls.WebResource;
			/** Shows the details of this agreement, as presented to the customer */
			msdyn_AgreementDetails: DevKit.Controls.String;
			/** This field defines the time of day when Work Orders and Invoices are generated by the Agreement Booking Setups and Agreement Invoice Setups defined on this Agreement. If this field is blank, the logic will look to the overall setting on the Field Service Settings record. */
			msdyn_AgreementRecordGeneration: DevKit.Controls.DateTime;
			/** This field defines the time of day when Work Orders and Invoices are generated by the Agreement Booking Setups and Agreement Invoice Setups defined on this Agreement. If this field is blank, the logic will look to the overall setting on the Field Service Settings record. */
			msdyn_AgreementRecordGeneration_1: DevKit.Controls.DateTime;
			/** Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account. */
			msdyn_BillingAccount: DevKit.Controls.Lookup;
			/** Enter the date this agreement was canceled. */
			msdyn_DateCanceled: DevKit.Controls.Date;
			/** Type a description of the agreement. */
			msdyn_Description: DevKit.Controls.String;
			/** Shows the duration how long this agreement is active. */
			msdyn_Duration: DevKit.Controls.Integer;
			/** Enter the date when this agreement is no longer active. */
			msdyn_EndDate: DevKit.Controls.Date;
			msdyn_name: DevKit.Controls.String;
			/** If this agreement originates from another agreement, you should specify the originating agreement here */
			msdyn_OriginatingAgreement: DevKit.Controls.Lookup;
			/** Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account */
			msdyn_PriceList: DevKit.Controls.Lookup;
			/** Tax Code to be used to calculate tax when Agreement is taxable. By default the system will use the tax code specified on the service account */
			msdyn_SalesTaxCode: DevKit.Controls.Lookup;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Controls.Lookup;
			/** The service territory this Agreement relates to. By default this will be set to the Service Territory defined on the service account */
			msdyn_ServiceTerritory: DevKit.Controls.Lookup;
			/** Enter the date from when this agreement is active. */
			msdyn_StartDate: DevKit.Controls.Date;
			/** Agreement Substatus */
			msdyn_SubStatus: DevKit.Controls.Lookup;
			/** Tracks the current system status. */
			msdyn_SystemStatus: DevKit.Controls.OptionSet;
			/** Specify if Agreement is taxable. By default an Agreement is taxable if billing account is not tax exempt, and Agreement type is taxable. If any of the above is false it will be set to non-taxable. */
			msdyn_Taxable: DevKit.Controls.Boolean;
			/** Owner Id */
			OwnerId: DevKit.Controls.Lookup;
		}
		interface Navigation {
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingsetup_Agreement: DevKit.Controls.NavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementinvoicesetup_Agreement: DevKit.Controls.NavigationItem,
			navProcessSessions: DevKit.Controls.NavigationItem
		}
		interface ProcessAgreement_Business_Process {
			/** Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account. */
			msdyn_BillingAccount: DevKit.Controls.Lookup;
			/** Type a description of the agreement. */
			msdyn_Description: DevKit.Controls.String;
			/** Type a description of the agreement. */
			msdyn_Description_1: DevKit.Controls.String;
			/** Shows the duration how long this agreement is active. */
			msdyn_Duration: DevKit.Controls.Integer;
			/** Enter the date when this agreement is no longer active. */
			msdyn_EndDate: DevKit.Controls.Date;
			msdyn_name: DevKit.Controls.String;
			/** Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account */
			msdyn_PriceList: DevKit.Controls.Lookup;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Controls.Lookup;
			/** Enter the date from when this agreement is active. */
			msdyn_StartDate: DevKit.Controls.Date;
			/** Agreement Substatus */
			msdyn_SubStatus: DevKit.Controls.Lookup;
			/** Agreement Substatus */
			msdyn_SubStatus_1: DevKit.Controls.Lookup;
			/** Tracks the current system status. */
			msdyn_SystemStatus: DevKit.Controls.OptionSet;
			/** Tracks the current system status. */
			msdyn_SystemStatus_1: DevKit.Controls.OptionSet;
			/** Tracks the current system status. */
			msdyn_SystemStatus_2: DevKit.Controls.OptionSet;
		}
		interface Process extends DevKit.Controls.IProcess {
			Agreement_Business_Process: ProcessAgreement_Business_Process;
		}
		interface Grid {
			bookingsgrid: DevKit.Controls.Grid;
			invoicegrid: DevKit.Controls.Grid;
			ContractLines: DevKit.Controls.Grid;
			QuotesLinesGrid: DevKit.Controls.Grid;
		}
	}
	class Formmsdyn_agreement_Agreement extends DevKit.IForm {
		/**
		* DynamicsCrm.DevKit form msdyn_agreement_Agreement
		* @param executionContext the execution context
		* @param defaultWebResourceName default resource name. E.g.: "devkit_/resources/Resource"
		*/
		constructor(executionContext: any, defaultWebResourceName?: string);
		/** Utility functions/methods/objects for Dynamics 365 form */
		Utility: DevKit.Utility;
		/** The Body section of form msdyn_agreement_Agreement */
		Body: MyDog.Formmsdyn_agreement_Agreement.Body;
		/** The Header section of form msdyn_agreement_Agreement */
		Header: MyDog.Formmsdyn_agreement_Agreement.Header;
		/** The Navigation of form msdyn_agreement_Agreement */
		Navigation: MyDog.Formmsdyn_agreement_Agreement.Navigation;
		/** The Process of form msdyn_agreement_Agreement */
		Process: MyDog.Formmsdyn_agreement_Agreement.Process;
		/** The Grid of form msdyn_agreement_Agreement */
		Grid: MyDog.Formmsdyn_agreement_Agreement.Grid;
	}
	namespace FormAgreement_Mobile {
		interface tab_fstab_general_Sections {
			fstab_general_section_summary: DevKit.Controls.Section;
			tab_3_section_2: DevKit.Controls.Section;
			fstab_general_section_details: DevKit.Controls.Section;
			fstab_general_column_2_section_1: DevKit.Controls.Section;
			_4C8BEF3B_E06C_4411_B312_59F180556E4D_SECTION_3: DevKit.Controls.Section;
		}
		interface tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_Sections {
			_BC490053_F7D4_44E2_BFB7_1CA938F59E1B: DevKit.Controls.Section;
			_2BCF1BE9_1CEB_434D_9866_6486738F2ACC: DevKit.Controls.Section;
			_7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_SECTION_3: DevKit.Controls.Section;
		}
		interface tab_fstab_general extends DevKit.Controls.ITab {
			Section: tab_fstab_general_Sections;
		}
		interface tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D extends DevKit.Controls.ITab {
			Section: tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D_Sections;
		}
		interface Tabs {
			fstab_general: tab_fstab_general;
			_7A6686D3_72AD_4724_9C46_5BA3C5FAE32D: tab__7A6686D3_72AD_4724_9C46_5BA3C5FAE32D;
		}
		interface Body {
			Tab: Tabs;
			notescontrol: DevKit.Controls.Note;
			WebResource_AgreementRecordGeneration_TimeField: DevKit.Controls.WebResource;
			/** Shows the details of this agreement, as presented to the customer */
			msdyn_AgreementDetails: DevKit.Controls.String;
			/** This field defines the time of day when Work Orders and Invoices are generated by the Agreement Booking Setups and Agreement Invoice Setups defined on this Agreement. If this field is blank, the logic will look to the overall setting on the Field Service Settings record. */
			msdyn_AgreementRecordGeneration: DevKit.Controls.DateTime;
			/** Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account. */
			msdyn_BillingAccount: DevKit.Controls.Lookup;
			/** Enter the date this agreement was canceled. */
			msdyn_DateCanceled: DevKit.Controls.Date;
			/** Type a description of the agreement. */
			msdyn_Description: DevKit.Controls.String;
			/** Shows the duration how long this agreement is active. */
			msdyn_Duration: DevKit.Controls.Integer;
			/** Enter the date when this agreement is no longer active. */
			msdyn_EndDate: DevKit.Controls.Date;
			msdyn_name: DevKit.Controls.String;
			/** If this agreement originates from another agreement, you should specify the originating agreement here */
			msdyn_OriginatingAgreement: DevKit.Controls.Lookup;
			/** Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account */
			msdyn_PriceList: DevKit.Controls.Lookup;
			/** Tax Code to be used to calculate tax when Agreement is taxable. By default the system will use the tax code specified on the service account */
			msdyn_SalesTaxCode: DevKit.Controls.Lookup;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Controls.Lookup;
			/** The service territory this Agreement relates to. By default this will be set to the Service Territory defined on the service account */
			msdyn_ServiceTerritory: DevKit.Controls.Lookup;
			/** Enter the date from when this agreement is active. */
			msdyn_StartDate: DevKit.Controls.Date;
			/** Agreement Substatus */
			msdyn_SubStatus: DevKit.Controls.Lookup;
			/** Tracks the current system status. */
			msdyn_SystemStatus: DevKit.Controls.OptionSet;
			/** Specify if Agreement is taxable. By default an Agreement is taxable if billing account is not tax exempt, and Agreement type is taxable. If any of the above is false it will be set to non-taxable. */
			msdyn_Taxable: DevKit.Controls.Boolean;
			/** Owner Id */
			OwnerId: DevKit.Controls.Lookup;
		}
		interface Navigation {
			nav_msdyn_msdyn_agreement_msdyn_agreementbookingsetup_Agreement: DevKit.Controls.NavigationItem,
			nav_msdyn_msdyn_agreement_msdyn_agreementinvoicesetup_Agreement: DevKit.Controls.NavigationItem
		}
		interface ProcessAgreement_Business_Process {
			/** Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account. */
			msdyn_BillingAccount: DevKit.Controls.Lookup;
			/** Type a description of the agreement. */
			msdyn_Description: DevKit.Controls.String;
			/** Type a description of the agreement. */
			msdyn_Description_1: DevKit.Controls.String;
			/** Shows the duration how long this agreement is active. */
			msdyn_Duration: DevKit.Controls.Integer;
			/** Enter the date when this agreement is no longer active. */
			msdyn_EndDate: DevKit.Controls.Date;
			msdyn_name: DevKit.Controls.String;
			/** Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account */
			msdyn_PriceList: DevKit.Controls.Lookup;
			/** Account to be serviced */
			msdyn_ServiceAccount: DevKit.Controls.Lookup;
			/** Enter the date from when this agreement is active. */
			msdyn_StartDate: DevKit.Controls.Date;
			/** Agreement Substatus */
			msdyn_SubStatus: DevKit.Controls.Lookup;
			/** Agreement Substatus */
			msdyn_SubStatus_1: DevKit.Controls.Lookup;
			/** Tracks the current system status. */
			msdyn_SystemStatus: DevKit.Controls.OptionSet;
			/** Tracks the current system status. */
			msdyn_SystemStatus_1: DevKit.Controls.OptionSet;
			/** Tracks the current system status. */
			msdyn_SystemStatus_2: DevKit.Controls.OptionSet;
		}
		interface Process extends DevKit.Controls.IProcess {
			Agreement_Business_Process: ProcessAgreement_Business_Process;
		}
		interface Grid {
			bookingsgrid: DevKit.Controls.Grid;
			invoicegrid: DevKit.Controls.Grid;
		}
	}
	class FormAgreement_Mobile extends DevKit.IForm {
		/**
		* DynamicsCrm.DevKit form Agreement_Mobile
		* @param executionContext the execution context
		* @param defaultWebResourceName default resource name. E.g.: "devkit_/resources/Resource"
		*/
		constructor(executionContext: any, defaultWebResourceName?: string);
		/** Utility functions/methods/objects for Dynamics 365 form */
		Utility: DevKit.Utility;
		/** The Body section of form Agreement_Mobile */
		Body: MyDog.FormAgreement_Mobile.Body;
		/** The Navigation of form Agreement_Mobile */
		Navigation: MyDog.FormAgreement_Mobile.Navigation;
		/** The Process of form Agreement_Mobile */
		Process: MyDog.FormAgreement_Mobile.Process;
		/** The Grid of form Agreement_Mobile */
		Grid: MyDog.FormAgreement_Mobile.Grid;
	}
	class msdyn_agreementApi {
		/**
		* DynamicsCrm.DevKit msdyn_agreementApi
		* @param entity The entity object
		*/
		constructor(entity?: any);
		/**
		 * Get the value of alias
		 * @param alias the alias value
		 * @param isMultiOptionSet true if the alias is multi OptionSet
		 */
		getAliasedValue(alias: string, isMultiOptionSet?: boolean): any;
		/**
		 * Get the formatted value of alias
		 * @param alias the alias value
		 * @param isMultiOptionSet true if the alias is multi OptionSet
		 */
		getAliasedFormattedValue(alias: string, isMultiOptionSet?: boolean): string;
		/** The entity object */
		Entity: any;
		/** The entity name */
		EntityName: string;
		/** The entity collection name */
		EntityCollectionName: string;
		/** The @odata.etag is then used to build a cache of the response that is dependant on the fields that are retrieved */
		"@odata.etag": string;
		/** Unique identifier of the user who created the record. */
		CreatedBy: DevKit.WebApi.LookupValueReadonly;
		/** Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options. */
		CreatedOn_UtcDateAndTime: DevKit.WebApi.UtcDateAndTimeValueReadonly;
		/** Shows who created the record on behalf of another user. */
		CreatedOnBehalfBy: DevKit.WebApi.LookupValueReadonly;
		/** Shows the sequence number of the import that created this record. */
		ImportSequenceNumber: DevKit.WebApi.IntegerValue;
		/** Unique identifier of the user who modified the record. */
		ModifiedBy: DevKit.WebApi.LookupValueReadonly;
		/** Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options. */
		ModifiedOn_UtcDateAndTime: DevKit.WebApi.UtcDateAndTimeValueReadonly;
		/** Shows who last updated the record on behalf of another user. */
		ModifiedOnBehalfBy: DevKit.WebApi.LookupValueReadonly;
		/** Shows the details of this agreement, as presented to the customer */
		msdyn_AgreementDetails: DevKit.WebApi.StringValue;
		/** Shows the entity instances. */
		msdyn_agreementId: DevKit.WebApi.GuidValue;
		/** This field defines the time of day when Work Orders and Invoices are generated by the Agreement Booking Setups and Agreement Invoice Setups defined on this Agreement. If this field is blank, the logic will look to the overall setting on the Field Service Settings record. */
		msdyn_AgreementRecordGeneration_UtcDateAndTime: DevKit.WebApi.UtcDateAndTimeValue;
		/** Internal field used to generate the next name upon entity creation. It is optionally copied to the msdyn_name field. */
		msdyn_AutoNumbering: DevKit.WebApi.StringValue;
		/** Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account. */
		msdyn_BillingAccount: DevKit.WebApi.LookupValue;
		msdyn_ChildIndex: DevKit.WebApi.IntegerValue;
		/** Enter the date this agreement was canceled. */
		msdyn_DateCanceled_UtcDateOnly: DevKit.WebApi.UtcDateOnlyValue;
		/** Type a description of the agreement. */
		msdyn_Description: DevKit.WebApi.StringValue;
		/** Shows the duration how long this agreement is active. */
		msdyn_Duration: DevKit.WebApi.IntegerValue;
		/** Enter the date when this agreement is no longer active. */
		msdyn_EndDate_UtcDateOnly: DevKit.WebApi.UtcDateOnlyValue;
		msdyn_name: DevKit.WebApi.StringValue;
		/** If this agreement originates from another agreement, you should specify the originating agreement here */
		msdyn_OriginatingAgreement: DevKit.WebApi.LookupValue;
		/** Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account */
		msdyn_PriceList: DevKit.WebApi.LookupValue;
		/** For internal use only */
		msdyn_ProcessStartedOn_TimezoneDateAndTime: DevKit.WebApi.TimezoneDateAndTimeValue;
		/** Tax Code to be used to calculate tax when Agreement is taxable. By default the system will use the tax code specified on the service account */
		msdyn_SalesTaxCode: DevKit.WebApi.LookupValue;
		/** Account to be serviced */
		msdyn_ServiceAccount: DevKit.WebApi.LookupValue;
		/** The service territory this Agreement relates to. By default this will be set to the Service Territory defined on the service account */
		msdyn_ServiceTerritory: DevKit.WebApi.LookupValue;
		/** Enter the date from when this agreement is active. */
		msdyn_StartDate_UtcDateOnly: DevKit.WebApi.UtcDateOnlyValue;
		/** Agreement Substatus */
		msdyn_SubStatus: DevKit.WebApi.LookupValue;
		/** Tracks the current system status. */
		msdyn_SystemStatus: DevKit.WebApi.OptionSetValue;
		/** Specify if Agreement is taxable. By default an Agreement is taxable if billing account is not tax exempt, and Agreement type is taxable. If any of the above is false it will be set to non-taxable. */
		msdyn_Taxable: DevKit.WebApi.BooleanValue;
		/** Shows the date and time that the record was migrated. */
		OverriddenCreatedOn_UtcDateOnly: DevKit.WebApi.UtcDateOnlyValue;
		/** Enter the user who is assigned to manage the record. This field is updated every time the record is assigned to a different user */
		OwnerId_systemuser: DevKit.WebApi.LookupValue;
		/** Enter the team who is assigned to manage the record. This field is updated every time the record is assigned to a different team */
		OwnerId_team: DevKit.WebApi.LookupValue;
		/** Unique identifier for the business unit that owns the record */
		OwningBusinessUnit: DevKit.WebApi.LookupValueReadonly;
		/** Unique identifier for the team that owns the record. */
		OwningTeam: DevKit.WebApi.LookupValueReadonly;
		/** Unique identifier for the user that owns the record. */
		OwningUser: DevKit.WebApi.LookupValueReadonly;
		/** Contains the ID of the process associated with the entity. */
		processid: DevKit.WebApi.GuidValue;
		/** Contains the ID of the stage where the entity is located. */
		stageid: DevKit.WebApi.GuidValue;
		/** Status of the Agreement */
		statecode: DevKit.WebApi.OptionSetValue;
		/** Reason for the status of the Agreement */
		statuscode: DevKit.WebApi.OptionSetValue;
		/** For internal use only. */
		TimeZoneRuleVersionNumber: DevKit.WebApi.IntegerValue;
		/** Shows a comma-separated list of string values that represent the unique identifiers of stages in a business process flow instance in the order that they occur. */
		traversedpath: DevKit.WebApi.StringValue;
		/** Shows the time zone code that was in use when the record was created. */
		UTCConversionTimeZoneCode: DevKit.WebApi.IntegerValue;
		/** Version Number */
		VersionNumber: DevKit.WebApi.BigIntValueReadonly;
	}
}
declare namespace OptionSet {
	namespace msdyn_agreement {
		enum msdyn_SystemStatus {
			/** 690970001 */
			Active,
			/** 690970003 */
			Canceled,
			/** 690970000 */
			Estimate,
			/** 690970002 */
			Expired
		}
		enum statecode {
			/** 0 */
			Active,
			/** 1 */
			Inactive
		}
		enum statuscode {
			/** 1 */
			Active,
			/** 2 */
			Inactive
		}
        enum RollupState {
            /** 0 - Attribute value is yet to be calculated */
            NotCalculated,
            /** 1 - Attribute value has been calculated per the last update time in <AttributeSchemaName>_Date attribute */
            Calculated,
            /** 2 - Attribute value calculation lead to overflow error */
            OverflowError,
            /** 3 - Attribute value calculation failed due to an internal error, next run of calculation job will likely fix it */
            OtherError,
            /** 4 - Attribute value calculation failed because the maximum number of retry attempts to calculate the value were exceeded likely due to high number of concurrency and locking conflicts */
            RetryLimitExceeded,
            /** 5 - Attribute value calculation failed because maximum hierarchy depth limit for calculation was reached */
            HierarchicalRecursionLimitReached,
            /** 6 - Attribute value calculation failed because a recursive loop was detected in the hierarchy of the record */
            LoopDetected
        }
	}
}
//{'JsForm':['Agreement','Agreement - Mobile'],'JsWebApi':true,'IsDebugForm':true,'IsDebugWebApi':true,'Version':'2.12.31','JsFormVersion':'v2'}
//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets
{
	public enum ComponentState
	{
		/// <summary>
		/// Deleted = 2
		/// </summary>
		Deleted = 2,
		/// <summary>
		/// Deleted Unpublished = 3
		/// </summary>
		Deleted_Unpublished = 3,
		/// <summary>
		/// Published = 0
		/// </summary>
		Published = 0,
		/// <summary>
		/// Unpublished = 1
		/// </summary>
		Unpublished = 1
	}

	public enum RecordDistributionCriteria
	{
		/// <summary>
		/// All records = 1
		/// </summary>
		All_records = 1,
		/// <summary>
		/// Custom data filter = 3
		/// </summary>
		Custom_data_filter = 3,
		/// <summary>
		/// Download related data only = 0
		/// </summary>
		Download_related_data_only = 0,
		/// <summary>
		/// Other data filter = 2
		/// </summary>
		Other_data_filter = 2
	}

	public enum SelectedEntityTypeCode
	{
		/// <summary>
		/// Account = 1
		/// </summary>
		Account = 1,
		/// <summary>
		/// AccountLeads = 16
		/// </summary>
		AccountLeads = 16,
		/// <summary>
		/// Activity File Attachment = 10074
		/// </summary>
		Activity_File_Attachment = 10074,
		/// <summary>
		/// Agreement Business Process = 10521
		/// </summary>
		Agreement_Business_Process = 10521,
		/// <summary>
		/// Appointment = 4201
		/// </summary>
		Appointment = 4201,
		/// <summary>
		/// Asset Category Template Association = 10126
		/// </summary>
		Asset_Category_Template_Association = 10126,
		/// <summary>
		/// Asset Template Association = 10127
		/// </summary>
		Asset_Template_Association = 10127,
		/// <summary>
		/// Attachment = 1001
		/// </summary>
		Attachment = 1001,
		/// <summary>
		/// Bookable Resource = 1150
		/// </summary>
		Bookable_Resource = 1150,
		/// <summary>
		/// Bookable Resource Booking = 1145
		/// </summary>
		Bookable_Resource_Booking = 1145,
		/// <summary>
		/// Bookable Resource Booking Quick Note = 10593
		/// </summary>
		Bookable_Resource_Booking_Quick_Note = 10593,
		/// <summary>
		/// Booking Status = 1152
		/// </summary>
		Booking_Status = 1152,
		/// <summary>
		/// Booking Timestamp = 10518
		/// </summary>
		Booking_Timestamp = 10518,
		/// <summary>
		/// Case = 112
		/// </summary>
		Case = 112,
		/// <summary>
		/// Case to Work Order Business Process = 10520
		/// </summary>
		Case_to_Work_Order_Business_Process = 10520,
		/// <summary>
		/// CFS - IoT Alert Process Flow = 10605
		/// </summary>
		CFS_IoT_Alert_Process_Flow = 10605,
		/// <summary>
		/// Competitor = 123
		/// </summary>
		Competitor = 123,
		/// <summary>
		/// Competitor Address = 1004
		/// </summary>
		Competitor_Address = 1004,
		/// <summary>
		/// Competitor Product = 1006
		/// </summary>
		Competitor_Product = 1006,
		/// <summary>
		/// Connection = 3234
		/// </summary>
		Connection = 3234,
		/// <summary>
		/// Connection Role = 3231
		/// </summary>
		Connection_Role = 3231,
		/// <summary>
		/// Contact = 2
		/// </summary>
		Contact = 2,
		/// <summary>
		/// ContactLeads = 22
		/// </summary>
		ContactLeads = 22,
		/// <summary>
		/// Currency = 9105
		/// </summary>
		Currency = 9105,
		/// <summary>
		/// Customer Asset = 10128
		/// </summary>
		Customer_Asset = 10128,
		/// <summary>
		/// Customer Asset Category = 10130
		/// </summary>
		Customer_Asset_Category = 10130,
		/// <summary>
		/// Email = 4202
		/// </summary>
		Email = 4202,
		/// <summary>
		/// Entitlement = 9700
		/// </summary>
		Entitlement = 9700,
		/// <summary>
		/// Entitlement Contact = 7272
		/// </summary>
		Entitlement_Contact = 7272,
		/// <summary>
		/// Entitlement Product = 6363
		/// </summary>
		Entitlement_Product = 6363,
		/// <summary>
		/// Entitlement Template Product = 4545
		/// </summary>
		Entitlement_Template_Product = 4545,
		/// <summary>
		/// Field Service Price List Item = 10524
		/// </summary>
		Field_Service_Price_List_Item = 10524,
		/// <summary>
		/// Field Service Setting = 10525
		/// </summary>
		Field_Service_Setting = 10525,
		/// <summary>
		/// Functional Location = 10131
		/// </summary>
		Functional_Location = 10131,
		/// <summary>
		/// Geolocation Settings = 10606
		/// </summary>
		Geolocation_Settings = 10606,
		/// <summary>
		/// Image Descriptor = 1007
		/// </summary>
		Image_Descriptor = 1007,
		/// <summary>
		/// Incident KnowledgeBaseRecord = 9931
		/// </summary>
		Incident_KnowledgeBaseRecord = 9931,
		/// <summary>
		/// Incident Type = 10528
		/// </summary>
		Incident_Type = 10528,
		/// <summary>
		/// Incident Type Product = 10530
		/// </summary>
		Incident_Type_Product = 10530,
		/// <summary>
		/// Incident Type Resolution = 10598
		/// </summary>
		Incident_Type_Resolution = 10598,
		/// <summary>
		/// Incident Type Service = 10531
		/// </summary>
		Incident_Type_Service = 10531,
		/// <summary>
		/// Incident Type Service Task = 10532
		/// </summary>
		Incident_Type_Service_Task = 10532,
		/// <summary>
		/// Incident Types Setup = 10533
		/// </summary>
		Incident_Types_Setup = 10533,
		/// <summary>
		/// Inspection Attachment = 10502
		/// </summary>
		Inspection_Attachment = 10502,
		/// <summary>
		/// Inspection Response = 10505
		/// </summary>
		Inspection_Response = 10505,
		/// <summary>
		/// Inspection Template = 10501
		/// </summary>
		Inspection_Template = 10501,
		/// <summary>
		/// Inspection Template Version = 10503
		/// </summary>
		Inspection_Template_Version = 10503,
		/// <summary>
		/// Invoice = 1090
		/// </summary>
		Invoice = 1090,
		/// <summary>
		/// Invoice Line = 1091
		/// </summary>
		Invoice_Line = 1091,
		/// <summary>
		/// Invoice Process = 10419
		/// </summary>
		Invoice_Process = 10419,
		/// <summary>
		/// IoT Alert = 10138
		/// </summary>
		IoT_Alert = 10138,
		/// <summary>
		/// IoT Alert to Case Process = 10154
		/// </summary>
		IoT_Alert_to_Case_Process = 10154,
		/// <summary>
		/// IoT Device = 10139
		/// </summary>
		IoT_Device = 10139,
		/// <summary>
		/// IoT Device Category = 10140
		/// </summary>
		IoT_Device_Category = 10140,
		/// <summary>
		/// IoT Device Command = 10141
		/// </summary>
		IoT_Device_Command = 10141,
		/// <summary>
		/// IoT Device Command Definition = 10142
		/// </summary>
		IoT_Device_Command_Definition = 10142,
		/// <summary>
		/// IoT Device Data History = 10143
		/// </summary>
		IoT_Device_Data_History = 10143,
		/// <summary>
		/// IoT Device Property = 10144
		/// </summary>
		IoT_Device_Property = 10144,
		/// <summary>
		/// IoT Device Registration History = 10145
		/// </summary>
		IoT_Device_Registration_History = 10145,
		/// <summary>
		/// IoT Property Definition = 10148
		/// </summary>
		IoT_Property_Definition = 10148,
		/// <summary>
		/// IoT Provider = 10149
		/// </summary>
		IoT_Provider = 10149,
		/// <summary>
		/// IoT Provider Instance = 10150
		/// </summary>
		IoT_Provider_Instance = 10150,
		/// <summary>
		/// IoT Settings = 10151
		/// </summary>
		IoT_Settings = 10151,
		/// <summary>
		/// Knowledge Article = 9953
		/// </summary>
		Knowledge_Article = 9953,
		/// <summary>
		/// Knowledge Article Attachment = 10084
		/// </summary>
		Knowledge_Article_Attachment = 10084,
		/// <summary>
		/// Knowledge Article Image = 10080
		/// </summary>
		Knowledge_Article_Image = 10080,
		/// <summary>
		/// Knowledge Article Views = 9955
		/// </summary>
		Knowledge_Article_Views = 9955,
		/// <summary>
		/// Lead = 4
		/// </summary>
		Lead = 4,
		/// <summary>
		/// Lead To Opportunity Sales Process = 954
		/// </summary>
		Lead_To_Opportunity_Sales_Process = 954,
		/// <summary>
		/// LeadCompetitors = 24
		/// </summary>
		LeadCompetitors = 24,
		/// <summary>
		/// LeadProduct = 27
		/// </summary>
		LeadProduct = 27,
		/// <summary>
		/// Note = 5
		/// </summary>
		Note = 5,
		/// <summary>
		/// Opportunity = 3
		/// </summary>
		Opportunity = 3,
		/// <summary>
		/// Opportunity Line = 1083
		/// </summary>
		Opportunity_Line = 1083,
		/// <summary>
		/// Opportunity Sales Process = 953
		/// </summary>
		Opportunity_Sales_Process = 953,
		/// <summary>
		/// OpportunityCompetitors = 25
		/// </summary>
		OpportunityCompetitors = 25,
		/// <summary>
		/// Order = 1088
		/// </summary>
		Order = 1088,
		/// <summary>
		/// Order Line = 1089
		/// </summary>
		Order_Line = 1089,
		/// <summary>
		/// Phone Call = 4210
		/// </summary>
		Phone_Call = 4210,
		/// <summary>
		/// Phone To Case Process = 952
		/// </summary>
		Phone_To_Case_Process = 952,
		/// <summary>
		/// Price List = 1022
		/// </summary>
		Price_List = 1022,
		/// <summary>
		/// Price List Item = 1026
		/// </summary>
		Price_List_Item = 1026,
		/// <summary>
		/// Priority = 10395
		/// </summary>
		Priority = 10395,
		/// <summary>
		/// Product = 1024
		/// </summary>
		Product = 1024,
		/// <summary>
		/// Product Inventory = 10548
		/// </summary>
		Product_Inventory = 10548,
		/// <summary>
		/// Product Relationship = 1028
		/// </summary>
		Product_Relationship = 1028,
		/// <summary>
		/// Project Stages = 10418
		/// </summary>
		Project_Stages = 10418,
		/// <summary>
		/// Property = 1048
		/// </summary>
		Property = 1048,
		/// <summary>
		/// Property Asset Association = 10133
		/// </summary>
		Property_Asset_Association = 10133,
		/// <summary>
		/// Property Association = 1235
		/// </summary>
		Property_Association = 1235,
		/// <summary>
		/// Property Definition = 10132
		/// </summary>
		Property_Definition = 10132,
		/// <summary>
		/// Property Instance = 1333
		/// </summary>
		Property_Instance = 1333,
		/// <summary>
		/// Property Log = 10134
		/// </summary>
		Property_Log = 10134,
		/// <summary>
		/// Property Option Set Item = 1049
		/// </summary>
		Property_Option_Set_Item = 1049,
		/// <summary>
		/// Property Template Association = 10135
		/// </summary>
		Property_Template_Association = 10135,
		/// <summary>
		/// Purchase Order Business Process = 10519
		/// </summary>
		Purchase_Order_Business_Process = 10519,
		/// <summary>
		/// Queue = 2020
		/// </summary>
		Queue = 2020,
		/// <summary>
		/// Queue Item = 2029
		/// </summary>
		Queue_Item = 2029,
		/// <summary>
		/// Quote = 1084
		/// </summary>
		Quote = 1084,
		/// <summary>
		/// Quote Line = 1085
		/// </summary>
		Quote_Line = 1085,
		/// <summary>
		/// Resolution = 10601
		/// </summary>
		Resolution = 10601,
		/// <summary>
		/// Scheduling Parameter = 10407
		/// </summary>
		Scheduling_Parameter = 10407,
		/// <summary>
		/// Service Task Type = 10571
		/// </summary>
		Service_Task_Type = 10571,
		/// <summary>
		/// SLA KPI Instance = 9752
		/// </summary>
		SLA_KPI_Instance = 9752,
		/// <summary>
		/// Task = 4212
		/// </summary>
		Task = 4212,
		/// <summary>
		/// Tax Code = 10573
		/// </summary>
		Tax_Code = 10573,
		/// <summary>
		/// Team = 9
		/// </summary>
		Team = 9,
		/// <summary>
		/// Template For Properties = 10136
		/// </summary>
		Template_For_Properties = 10136,
		/// <summary>
		/// Territory = 2013
		/// </summary>
		Territory = 2013,
		/// <summary>
		/// Time Entry = 10481
		/// </summary>
		Time_Entry = 10481,
		/// <summary>
		/// Time Off Request = 10575
		/// </summary>
		Time_Off_Request = 10575,
		/// <summary>
		/// Time Source = 10496
		/// </summary>
		Time_Source = 10496,
		/// <summary>
		/// Unit = 1055
		/// </summary>
		Unit = 1055,
		/// <summary>
		/// Unit Group = 1056
		/// </summary>
		Unit_Group = 1056,
		/// <summary>
		/// User = 8
		/// </summary>
		User = 8,
		/// <summary>
		/// Warehouse = 10577
		/// </summary>
		Warehouse = 10577,
		/// <summary>
		/// Work Order = 10578
		/// </summary>
		Work_Order = 10578,
		/// <summary>
		/// Work Order Business Process = 10522
		/// </summary>
		Work_Order_Business_Process = 10522,
		/// <summary>
		/// Work Order Incident = 10581
		/// </summary>
		Work_Order_Incident = 10581,
		/// <summary>
		/// Work Order Product = 10582
		/// </summary>
		Work_Order_Product = 10582,
		/// <summary>
		/// Work Order Resolution = 10604
		/// </summary>
		Work_Order_Resolution = 10604,
		/// <summary>
		/// Work Order Service = 10584
		/// </summary>
		Work_Order_Service = 10584,
		/// <summary>
		/// Work Order Service Task = 10585
		/// </summary>
		Work_Order_Service_Task = 10585,
		/// <summary>
		/// Work Order Substatus = 10586
		/// </summary>
		Work_Order_Substatus = 10586,
		/// <summary>
		/// Work Order Type = 10587
		/// </summary>
		Work_Order_Type = 10587
	}
}

namespace Dev.DevKit.Shared.Entities
{
	public partial class MobileOfflineProfileItem : EntityBase
	{
		public struct Fields
		{
			[System.Obsolete("Deprecated from version: 8.0.0.0")]
			public const string CanBeFollowed = "canbefollowed";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string EntityObjectTypeCode = "entityobjecttypecode";
			[System.Obsolete("Deprecated from version: 8.0.0.0")]
			public const string GetRelatedEntityRecords = "getrelatedentityrecords";
			public const string IntroducedVersion = "introducedversion";
			public const string IsManaged = "ismanaged";
			public const string IsValidated = "isvalidated";
			public const string IsVisibleInGrid = "isvisibleingrid";
			public const string MobileOfflineProfileItemId = "mobileofflineprofileitemid";
			public const string MobileOfflineProfileItemIdUnique = "mobileofflineprofileitemidunique";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OverwriteTime = "overwritetime";
			public const string ProcessId = "processid";
			public const string ProfileItemEntityFilter = "profileitementityfilter";
			[System.Obsolete("Deprecated from version: 8.0.0.0")]
			public const string ProfileItemRule = "profileitemrule";
			public const string PublishedOn = "publishedon";
			public const string RecordDistributionCriteria = "recorddistributioncriteria";
			public const string RecordsOwnedByMe = "recordsownedbyme";
			public const string RecordsOwnedByMyBusinessUnit = "recordsownedbymybusinessunit";
			public const string RecordsOwnedByMyTeam = "recordsownedbymyteam";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RelationshipData = "relationshipdata";
			public const string SelectedEntityMetadata = "selectedentitymetadata";
			public const string SelectedEntityTypeCode = "selectedentitytypecode";
			public const string SolutionId = "solutionid";
			public const string StageId = "stageid";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string SyncIntervalInMinutes = "syncintervalinminutes";
			public const string TraversedPath = "traversedpath";
			public const string VersionNumber = "versionnumber";
			[System.Obsolete("Deprecated from version: 8.0.0.0")]
			public const string ViewQuery = "viewquery";
		}

		public const string EntityLogicalName = "mobileofflineprofileitem";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 9867;

		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(Guid MobileOfflineProfileItemId)
		{
			Entity = new Entity(EntityLogicalName, MobileOfflineProfileItemId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>Specifies whether records of this entity can be followed.</para>
		/// <para>Boolean</para>
		/// <para>Allow Entity to Follow Relationship</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 8.0.0.0")]
		public bool? CanBeFollowed
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.CanBeFollowed); }
			set { Entity.Attributes[Fields.CanBeFollowed] = value; }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>ReadOnly - Picklist</para>
		/// <para>Component State</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.ComponentState? ComponentState
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.ComponentState);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.ComponentState)value.Value;
			}
		}

		/// <summary>
		/// <para>Shows who created the record.</para>
		/// <para>ReadOnly - Lookup to systemuser</para>
		/// <para>Created By</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}

		/// <summary>
		/// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
		/// <para>ReadOnly - DateTimeBehavior: UserLocal - DateTimeFormat: DateAndTime</para>
		/// <para>Created On</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}

		/// <summary>
		/// <para>Shows who created the record on behalf of another user.</para>
		/// <para>ReadOnly - Lookup to systemuser</para>
		/// <para>Created By (Delegate)</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}

		/// <summary>
		/// <para>Internal Use Only</para>
		/// <para>ReadOnly - Integer - MinValue: 0 - MaxValue: 1,000,000,000</para>
		/// <para>Internal Use Only</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? EntityObjectTypeCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.EntityObjectTypeCode); }
		}

		/// <summary>
		/// <para>Specify whether records related to this entity will be made available for offline access.</para>
		/// <para>Boolean</para>
		/// <para>Get Related Entities</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 8.0.0.0")]
		public bool? GetRelatedEntityRecords
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.GetRelatedEntityRecords); }
			set { Entity.Attributes[Fields.GetRelatedEntityRecords] = value; }
		}

		/// <summary>
		/// <para>Version in which the Mobile offline Profile Item is introduced.</para>
		/// <para>String - MaxLength: 48</para>
		/// <para>Introduced Version</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string IntroducedVersion
		{
			get { return Entity.GetAttributeValue<string>(Fields.IntroducedVersion); }
			set { Entity.Attributes[Fields.IntroducedVersion] = value; }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>ReadOnly - Boolean</para>
		/// <para>Is Managed</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsManaged
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsManaged); }
		}

		/// <summary>
		/// <para>Information about whether profile item is validated or not</para>
		/// <para>ReadOnly - Boolean</para>
		/// <para>Is Valid For Mobile Offline</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsValidated
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsValidated); }
		}

		/// <summary>
		/// <para>Information about whether the mobile offline profile item is visible in the Profile Item subgrid.</para>
		/// <para>Boolean</para>
		/// <para>Is Visible In Grid</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsVisibleInGrid
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsVisibleInGrid); }
			set { Entity.Attributes[Fields.IsVisibleInGrid] = value; }
		}

		/// <summary>
		/// <para>Unique identifier of the mobile offline profile item.</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para>Mobile Offline Profile Item</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid MobileOfflineProfileItemId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.MobileOfflineProfileItemId] = value;
				Entity.Id = value;
			}
		}

		/// <summary>
		/// <para>For Internal Use Only</para>
		/// <para>ReadOnly - Uniqueidentifier</para>
		/// <para>Unique Id</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? MobileOfflineProfileItemIdUnique
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.MobileOfflineProfileItemIdUnique); }
		}

		/// <summary>
		/// <para>Shows who last updated the record.</para>
		/// <para>ReadOnly - Lookup to systemuser</para>
		/// <para>Modified By</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}

		/// <summary>
		/// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
		/// <para>ReadOnly - DateTimeBehavior: UserLocal - DateTimeFormat: DateAndTime</para>
		/// <para>Modified On</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}

		/// <summary>
		/// <para>Shows who updated the record on behalf of another user.</para>
		/// <para>ReadOnly - Lookup to systemuser</para>
		/// <para>Modified By (Delegate)</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}

		/// <summary>
		/// <para>Enter the name of the mobile offline profile item.</para>
		/// <para>String - MaxLength: 255</para>
		/// <para>Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Name
		{
			get { return Entity.GetAttributeValue<string>(Fields.Name); }
			set { Entity.Attributes[Fields.Name] = value; }
		}

		/// <summary>
		/// <para>Unique identifier of the organization associated with the Mobile Offline Profile Item.</para>
		/// <para>ReadOnly - Lookup to organization</para>
		/// <para>Organization</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OrganizationId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OrganizationId); }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>ReadOnly - DateTimeBehavior: UserLocal - DateTimeFormat: DateOnly</para>
		/// <para>Record Overwrite Time</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverwriteTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverwriteTime); }
		}

		/// <summary>
		/// <para>Shows the ID of the process.</para>
		/// <para>Uniqueidentifier</para>
		/// <para>Process</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? ProcessId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.ProcessId); }
			set { Entity.Attributes[Fields.ProcessId] = value; }
		}

		/// <summary>
		/// <para>Profile item entity filter criteria</para>
		/// <para>Memo - MaxLength: 1073741823</para>
		/// <para>Profile item entity filter</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string ProfileItemEntityFilter
		{
			get { return Entity.GetAttributeValue<string>(Fields.ProfileItemEntityFilter); }
			set { Entity.Attributes[Fields.ProfileItemEntityFilter] = value; }
		}

		/// <summary>
		/// <para>Saved Query associated with the Mobile offline profile item rule.</para>
		/// <para>Lookup to savedquery</para>
		/// <para>View to sync data to device</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 8.0.0.0")]
		public EntityReference ProfileItemRule
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ProfileItemRule); }
			set { Entity.Attributes[Fields.ProfileItemRule] = value; }
		}

		/// <summary>
		/// <para>Displays the last published date time.</para>
		/// <para>ReadOnly - DateTimeBehavior: UserLocal - DateTimeFormat: DateAndTime</para>
		/// <para>Published On</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? PublishedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.PublishedOn); }
		}

		/// <summary>
		/// <para>Specify data download filter for selected entity</para>
		/// <para>Picklist</para>
		/// <para>Data Download Filter</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.RecordDistributionCriteria? RecordDistributionCriteria
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.RecordDistributionCriteria);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.RecordDistributionCriteria)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.RecordDistributionCriteria] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.RecordDistributionCriteria] = null;
			}
		}

		/// <summary>
		/// <para>Download my records</para>
		/// <para>Boolean</para>
		/// <para>Download my records</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? RecordsOwnedByMe
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.RecordsOwnedByMe); }
			set { Entity.Attributes[Fields.RecordsOwnedByMe] = value; }
		}

		/// <summary>
		/// <para>Download my business unit&apos;s records</para>
		/// <para>Boolean</para>
		/// <para>Download my business unit's records</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? RecordsOwnedByMyBusinessUnit
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.RecordsOwnedByMyBusinessUnit); }
			set { Entity.Attributes[Fields.RecordsOwnedByMyBusinessUnit] = value; }
		}

		/// <summary>
		/// <para>Download my team&apos;s records</para>
		/// <para>Boolean</para>
		/// <para>Download my team's records</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? RecordsOwnedByMyTeam
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.RecordsOwnedByMyTeam); }
			set { Entity.Attributes[Fields.RecordsOwnedByMyTeam] = value; }
		}

		/// <summary>
		/// <para>Items contained with a particular Profile.</para>
		/// <para>Lookup to mobileofflineprofile</para>
		/// <para>Regarding</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference RegardingObjectId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.RegardingObjectId); }
			set { Entity.Attributes[Fields.RegardingObjectId] = value; }
		}

		/// <summary>
		/// <para>Internal Use Only</para>
		/// <para>Memo - MaxLength: 1073741823</para>
		/// <para>Internal Use Only</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string RelationshipData
		{
			get { return Entity.GetAttributeValue<string>(Fields.RelationshipData); }
			set { Entity.Attributes[Fields.RelationshipData] = value; }
		}

		/// <summary>
		/// <para>Internal Use Only</para>
		/// <para>ReadOnly - Memo - MaxLength: 1073741823</para>
		/// <para>Internal Use Only</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string SelectedEntityMetadata
		{
			get { return Entity.GetAttributeValue<string>(Fields.SelectedEntityMetadata); }
		}

		/// <summary>
		/// <para>Mobile offline enabled entity</para>
		/// <para>EntityName</para>
		/// <para>Entity</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string SelectedEntityTypeCode
		{
			get { return Entity.GetAttributeValue<string>(Fields.SelectedEntityTypeCode); }
			set { Entity.Attributes[Fields.SelectedEntityTypeCode] = value; }
		}

		/// <summary>
		/// <para>Unique identifier of the associated solution.</para>
		/// <para>ReadOnly - Uniqueidentifier</para>
		/// <para>Solution</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SolutionId); }
		}

		/// <summary>
		/// <para>Shows the ID of the stage.</para>
		/// <para>Uniqueidentifier</para>
		/// <para>(Deprecated) Process Stage</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? StageId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.StageId); }
			set { Entity.Attributes[Fields.StageId] = value; }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>ReadOnly - Uniqueidentifier</para>
		/// <para>Solution</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SupportingSolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SupportingSolutionId); }
		}

		/// <summary>
		/// <para>How often to sync data offline.</para>
		/// <para>Integer - MinValue: 5 - MaxValue: 1,440</para>
		/// <para>SyncIntervalInMinutes</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? SyncIntervalInMinutes
		{
			get { return Entity.GetAttributeValue<int?>(Fields.SyncIntervalInMinutes); }
			set { Entity.Attributes[Fields.SyncIntervalInMinutes] = value; }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>String - MaxLength: 1250</para>
		/// <para>(Deprecated) Traversed Path</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string TraversedPath
		{
			get { return Entity.GetAttributeValue<string>(Fields.TraversedPath); }
			set { Entity.Attributes[Fields.TraversedPath] = value; }
		}

		/// <summary>
		/// <para>Version number of the Mobile Offline Profile Item.</para>
		/// <para>ReadOnly - BigInt</para>
		/// <para>Version Number</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}

		/// <summary>
		/// <para>Contains converted sql of the referenced view.</para>
		/// <para>Memo - MaxLength: 1073741823</para>
		/// <para>View Query</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 8.0.0.0")]
		public string ViewQuery
		{
			get { return Entity.GetAttributeValue<string>(Fields.ViewQuery); }
			set { Entity.Attributes[Fields.ViewQuery] = value; }
		}
	}
}

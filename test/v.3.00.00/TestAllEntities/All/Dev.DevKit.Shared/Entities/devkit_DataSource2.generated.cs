//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.devkit_DataSource2OptionSets
{

}

namespace Dev.DevKit.Shared.Entities
{
	public partial class devkit_DataSource2 : EntityBase
	{
		public struct Fields
		{
			public const string devkit_DataSource2Id = "devkit_datasource2id";
			public const string devkit_DataSource2Name = "devkit_datasource2name";
		}

		public const string EntityLogicalName = "devkit_datasource2";

		public const int EntityTypeCode = 10167;

		[DebuggerNonUserCode()]
		public devkit_DataSource2()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public devkit_DataSource2(Guid devkit_DataSource2Id)
		{
			Entity = new Entity(EntityLogicalName, devkit_DataSource2Id);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public devkit_DataSource2(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public devkit_DataSource2(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public devkit_DataSource2(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public devkit_DataSource2(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>Unique identifier for entity instances</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para>Data Source 2</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid devkit_DataSource2Id
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.devkit_DataSource2Id] = value;
				Entity.Id = value;
			}
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Data Source 2</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string devkit_DataSource2Name
		{
			get { return Entity.GetAttributeValue<string>(Fields.devkit_DataSource2Name); }
			set { Entity.Attributes[Fields.devkit_DataSource2Name] = value; }
		}
	}
}
